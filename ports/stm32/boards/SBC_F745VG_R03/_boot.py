"""
Enable USB for communication, falling back to UART3 to ensure access to the MicroPython REPL.
"""

# Disable linter error for micropython related stuff
# pylint: disable=E0401,E1101

import os
from time import sleep
from machine import reset_cause, SOFT_RESET, UART # type: ignore
from sbc import USB # type: ignore

# fmt: off
# pylint: disable=line-too-long
CONFIG = [
    [0x20, 0x24, 0x04, 0x17, 0x25, 0x11, 0x22, 0xbb, 0x20, 0x09, 0x00, 0x00, 0x00, 0x32, 0xfa, 0x32, 0xfa, 0x64, 0x04, 0x09, 0x06, 0x0f, 0x0a, 0x73, 0x00, 0x74, 0x00, 0x61, 0x00, 0x6c, 0x00, 0x79, 0x00],
    [0x20, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    [0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x00, 0x69, 0x00, 0x6d, 0x00, 0x70, 0x00, 0x6c, 0x00, 0x65, 0x00],
    [0x20, 0x52, 0x00, 0x54, 0x00, 0x4b, 0x00, 0x32, 0x00, 0x42, 0x00, 0x2d, 0x00, 0x53, 0x00, 0x42, 0x00, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    [0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x34, 0x00, 0x30, 0x00, 0x35, 0x00, 0x36, 0x00, 0x39, 0x00, 0x31, 0x00],
    [0x20, 0x35, 0x00, 0x38, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    [0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    [0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x00, 0x00]
]
PORTS = [0x04, 0x21, 0x43, 0x65, 0x00]
ATTACH = [0x01, 0x01]
# pylint: enable=line-too-long
# fmt: on


if reset_cause() != SOFT_RESET:
    try:
        USB.on()
        sleep(1)
        USB.enable(config=CONFIG, ports=PORTS, attach=ATTACH)
        print('USB Hub enabled')
    except Exception as error: # pylint: disable=W0703
        print(f"{error}")
        print('USB Hub not enabled. Run on UART 3')
        uart = UART(3, baudrate=115200)
        os.dupterm(uart)
